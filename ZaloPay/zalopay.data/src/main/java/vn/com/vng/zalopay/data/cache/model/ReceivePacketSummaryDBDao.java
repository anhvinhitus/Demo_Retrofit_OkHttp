//package vn.com.vng.zalopay.data.cache.model;
//
//import android.database.Cursor;
//import android.database.sqlite.SQLiteStatement;
//
//import org.greenrobot.greendao.AbstractDao;
//import org.greenrobot.greendao.Property;
//import org.greenrobot.greendao.internal.DaoConfig;
//import org.greenrobot.greendao.database.Database;
//import org.greenrobot.greendao.database.DatabaseStatement;
//
//// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
///**
// * DAO for table "RECEIVE_PACKET_SUMMARY_DB".
//*/
//public class ReceivePacketSummaryDBDao extends AbstractDao<ReceivePacketSummaryDB, Long> {
//
//    public static final String TABLENAME = "RECEIVE_PACKET_SUMMARY_DB";
//
//    /**
//     * Properties of entity ReceivePacketSummaryDB.<br/>
//     * Can be used for QueryBuilder and for referencing column names.
//     */
//    public static class Properties {
//        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
//        public final static Property TotalOfRevamount = new Property(1, Long.class, "totalOfRevamount", false, "TOTAL_OF_REVAMOUNT");
//        public final static Property TotalOfRevPackage = new Property(2, Long.class, "totalOfRevPackage", false, "TOTAL_OF_REV_PACKAGE");
//        public final static Property TotalOfLuckiestDraw = new Property(3, Long.class, "totalOfLuckiestDraw", false, "TOTAL_OF_LUCKIEST_DRAW");
//        public final static Property TimeCreate = new Property(4, Long.class, "timeCreate", false, "TIME_CREATE");
//    }
//
//
//    public ReceivePacketSummaryDBDao(DaoConfig config) {
//        super(config);
//    }
//
//    public ReceivePacketSummaryDBDao(DaoConfig config, DaoSession daoSession) {
//        super(config, daoSession);
//    }
//
//    /** Creates the underlying database table. */
//    public static void createTable(Database db, boolean ifNotExists) {
//        String constraint = ifNotExists? "IF NOT EXISTS ": "";
//        db.execSQL("CREATE TABLE " + constraint + "\"RECEIVE_PACKET_SUMMARY_DB\" (" + //
//                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
//                "\"TOTAL_OF_REVAMOUNT\" INTEGER," + // 1: totalOfRevamount
//                "\"TOTAL_OF_REV_PACKAGE\" INTEGER," + // 2: totalOfRevPackage
//                "\"TOTAL_OF_LUCKIEST_DRAW\" INTEGER," + // 3: totalOfLuckiestDraw
//                "\"TIME_CREATE\" INTEGER);"); // 4: timeCreate
//    }
//
//    /** Drops the underlying database table. */
//    public static void dropTable(Database db, boolean ifExists) {
//        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"RECEIVE_PACKET_SUMMARY_DB\"";
//        db.execSQL(sql);
//    }
//
//    @Override
//    protected final void bindValues(DatabaseStatement stmt, ReceivePacketSummaryDB entity) {
//        stmt.clearBindings();
//
//        Long id = entity.id;
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//
//        Long totalOfRevamount = entity.totalOfRevamount;
//        if (totalOfRevamount != null) {
//            stmt.bindLong(2, totalOfRevamount);
//        }
//
//        Long totalOfRevPackage = entity.totalOfRevPackage;
//        if (totalOfRevPackage != null) {
//            stmt.bindLong(3, totalOfRevPackage);
//        }
//
//        Long totalOfLuckiestDraw = entity.totalOfLuckiestDraw;
//        if (totalOfLuckiestDraw != null) {
//            stmt.bindLong(4, totalOfLuckiestDraw);
//        }
//
//        Long timeCreate = entity.timeCreate;
//        if (timeCreate != null) {
//            stmt.bindLong(5, timeCreate);
//        }
//    }
//
//    @Override
//    protected final void bindValues(SQLiteStatement stmt, ReceivePacketSummaryDB entity) {
//        stmt.clearBindings();
//
//        Long id = entity.id;
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//
//        Long totalOfRevamount = entity.totalOfRevamount;
//        if (totalOfRevamount != null) {
//            stmt.bindLong(2, totalOfRevamount);
//        }
//
//        Long totalOfRevPackage = entity.totalOfRevPackage;
//        if (totalOfRevPackage != null) {
//            stmt.bindLong(3, totalOfRevPackage);
//        }
//
//        Long totalOfLuckiestDraw = entity.totalOfLuckiestDraw;
//        if (totalOfLuckiestDraw != null) {
//            stmt.bindLong(4, totalOfLuckiestDraw);
//        }
//
//        Long timeCreate = entity.timeCreate;
//        if (timeCreate != null) {
//            stmt.bindLong(5, timeCreate);
//        }
//    }
//
//    @Override
//    public Long readKey(Cursor cursor, int offset) {
//        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
//    }
//
//    @Override
//    public ReceivePacketSummaryDB readEntity(Cursor cursor, int offset) {
//        ReceivePacketSummaryDB entity = new ReceivePacketSummaryDB();
//        readEntity(cursor, entity, offset);
//        return entity;
//    }
//
//    @Override
//    public void readEntity(Cursor cursor, ReceivePacketSummaryDB entity, int offset) {
//        entity.id = cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
//        entity.totalOfRevamount = cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1);
//        entity.totalOfRevPackage = cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2);
//        entity.totalOfLuckiestDraw = cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3);
//        entity.timeCreate = cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4);
//     }
//
//    @Override
//    protected final Long updateKeyAfterInsert(ReceivePacketSummaryDB entity, long rowId) {
//        entity.id = rowId;
//        return rowId;
//    }
//
//    @Override
//    public Long getKey(ReceivePacketSummaryDB entity) {
//        if(entity != null) {
//            return entity.id;
//        } else {
//            return null;
//        }
//    }
//
//    @Override
//    public boolean hasKey(ReceivePacketSummaryDB entity) {
//        return entity.id != null;
//    }
//
//    @Override
//    protected final boolean isEntityUpdateable() {
//        return true;
//    }
//
//}
