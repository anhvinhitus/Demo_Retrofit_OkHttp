package vn.com.vng.zalopay.data.cache.model;

import java.util.List;
import vn.com.vng.zalopay.data.cache.model.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "RECEIVE_PACKAGE_GD".
 */
public class ReceivePackageGD {

    private long id;
    private Long bundleID;
    private String receiverZaloPayID;
    private String senderZaloPayID;
    private String senderFullName;
    private String senderAvatar;
    private Long amount;
    private Long openedTime;
    private Integer status;
    private String messageStatus;
    private String message;
    private Integer isLuckiest;
    private Long createTime;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ReceivePackageGDDao myDao;

    private List<PackageInBundleGD> receivePackages;

    public ReceivePackageGD() {
    }

    public ReceivePackageGD(long id) {
        this.id = id;
    }

    public ReceivePackageGD(long id, Long bundleID, String receiverZaloPayID, String senderZaloPayID, String senderFullName, String senderAvatar, Long amount, Long openedTime, Integer status, String messageStatus, String message, Integer isLuckiest, Long createTime) {
        this.id = id;
        this.bundleID = bundleID;
        this.receiverZaloPayID = receiverZaloPayID;
        this.senderZaloPayID = senderZaloPayID;
        this.senderFullName = senderFullName;
        this.senderAvatar = senderAvatar;
        this.amount = amount;
        this.openedTime = openedTime;
        this.status = status;
        this.messageStatus = messageStatus;
        this.message = message;
        this.isLuckiest = isLuckiest;
        this.createTime = createTime;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getReceivePackageGDDao() : null;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public Long getBundleID() {
        return bundleID;
    }

    public void setBundleID(Long bundleID) {
        this.bundleID = bundleID;
    }

    public String getReceiverZaloPayID() {
        return receiverZaloPayID;
    }

    public void setReceiverZaloPayID(String receiverZaloPayID) {
        this.receiverZaloPayID = receiverZaloPayID;
    }

    public String getSenderZaloPayID() {
        return senderZaloPayID;
    }

    public void setSenderZaloPayID(String senderZaloPayID) {
        this.senderZaloPayID = senderZaloPayID;
    }

    public String getSenderFullName() {
        return senderFullName;
    }

    public void setSenderFullName(String senderFullName) {
        this.senderFullName = senderFullName;
    }

    public String getSenderAvatar() {
        return senderAvatar;
    }

    public void setSenderAvatar(String senderAvatar) {
        this.senderAvatar = senderAvatar;
    }

    public Long getAmount() {
        return amount;
    }

    public void setAmount(Long amount) {
        this.amount = amount;
    }

    public Long getOpenedTime() {
        return openedTime;
    }

    public void setOpenedTime(Long openedTime) {
        this.openedTime = openedTime;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getMessageStatus() {
        return messageStatus;
    }

    public void setMessageStatus(String messageStatus) {
        this.messageStatus = messageStatus;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public Integer getIsLuckiest() {
        return isLuckiest;
    }

    public void setIsLuckiest(Integer isLuckiest) {
        this.isLuckiest = isLuckiest;
    }

    public Long getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<PackageInBundleGD> getReceivePackages() {
        if (receivePackages == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PackageInBundleGDDao targetDao = daoSession.getPackageInBundleGDDao();
            List<PackageInBundleGD> receivePackagesNew = targetDao._queryReceivePackageGD_ReceivePackages(id);
            synchronized (this) {
                if(receivePackages == null) {
                    receivePackages = receivePackagesNew;
                }
            }
        }
        return receivePackages;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetReceivePackages() {
        receivePackages = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
