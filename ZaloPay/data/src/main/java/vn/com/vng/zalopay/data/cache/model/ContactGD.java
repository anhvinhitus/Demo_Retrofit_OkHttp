package vn.com.vng.zalopay.data.cache.model;

import org.greenrobot.greendao.annotation.*;

import vn.com.vng.zalopay.data.cache.model.DaoSession;
import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

/**
 * Entity mapped to table "CONTACT_GD".
 */
@Entity(active = true)
public class ContactGD {
    public String fulltextsearch;
    public String displayName;

    @Id
    public long phoneNumber;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient ContactGDDao myDao;

    @ToOne(joinProperty = "phoneNumber")
    private ZaloPayProfileGD zaloPayInfo;

    @Generated
    private transient Long zaloPayInfo__resolvedKey;


    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getContactGDDao() : null;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public ZaloPayProfileGD getZaloPayInfo() {
        long __key = this.phoneNumber;
        if (zaloPayInfo__resolvedKey == null || !zaloPayInfo__resolvedKey.equals(__key)) {
            __throwIfDetached();
            ZaloPayProfileGDDao targetDao = daoSession.getZaloPayProfileGDDao();
            ZaloPayProfileGD zaloPayInfoNew = targetDao.load(__key);
            synchronized (this) {
                zaloPayInfo = zaloPayInfoNew;
            	zaloPayInfo__resolvedKey = __key;
            }
        }
        return zaloPayInfo;
    }

    @Generated
    public void setZaloPayInfo(ZaloPayProfileGD zaloPayInfo) {
        if (zaloPayInfo == null) {
            throw new DaoException("To-one property 'phoneNumber' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.zaloPayInfo = zaloPayInfo;
            phoneNumber = zaloPayInfo.phoneNumber;
            zaloPayInfo__resolvedKey = phoneNumber;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

}
