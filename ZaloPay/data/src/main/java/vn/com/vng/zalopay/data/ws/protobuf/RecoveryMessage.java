// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: zpmsguser.proto at 49:1
package vn.com.vng.zalopay.data.ws.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RecoveryMessage extends Message<RecoveryMessage, RecoveryMessage.Builder> {
  public static final ProtoAdapter<RecoveryMessage> ADAPTER = new ProtoAdapter_RecoveryMessage();

  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_DATA = ByteString.EMPTY;

  public static final Integer DEFAULT_STATUS = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES",
      label = WireField.Label.REQUIRED
  )
  public final ByteString data;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer status;

  public RecoveryMessage(ByteString data, Integer status) {
    this(data, status, ByteString.EMPTY);
  }

  public RecoveryMessage(ByteString data, Integer status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.data = data;
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.data = data;
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RecoveryMessage)) return false;
    RecoveryMessage o = (RecoveryMessage) other;
    return unknownFields().equals(o.unknownFields())
        && data.equals(o.data)
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + data.hashCode();
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", data=").append(data);
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "RecoveryMessage{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RecoveryMessage, Builder> {
    public ByteString data;

    public Integer status;

    public Builder() {
    }

    public Builder data(ByteString data) {
      this.data = data;
      return this;
    }

    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    @Override
    public RecoveryMessage build() {
      if (data == null) {
        throw Internal.missingRequiredFields(data, "data");
      }
      return new RecoveryMessage(data, status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RecoveryMessage extends ProtoAdapter<RecoveryMessage> {
    ProtoAdapter_RecoveryMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, RecoveryMessage.class);
    }

    @Override
    public int encodedSize(RecoveryMessage value) {
      return ProtoAdapter.BYTES.encodedSizeWithTag(1, value.data)
          + (value.status != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.status) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RecoveryMessage value) throws IOException {
      ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.data);
      if (value.status != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RecoveryMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.data(ProtoAdapter.BYTES.decode(reader)); break;
          case 2: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RecoveryMessage redact(RecoveryMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
